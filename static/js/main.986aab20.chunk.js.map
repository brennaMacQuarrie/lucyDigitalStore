{"version":3,"sources":["assets/malaGreen.jpg","assets/malaBlack.jpg","assets/malaGold.jpg","assets/braceletMagnesite.jpg","assets/braceletMixed.jpg","assets/braceletPeach.jpg","assets/braceletTurquoise.jpg","assets/earringDiamond.jpg","assets/earringFeather.jpg","assets/earringGoldLeaf.jpg","assets/earringPink.jpg","assets/earringTan.jpg","assets/earringWhite.jpg","assets/paintingPuffin.jpg","assets/paintingRedBird.jpg","assets/paintingBlueBird2.jpg","Components/images.js","Components/firebase.js","Components/Header.js","Components/Item.js","Components/Cart.js","Components/App.js","serviceWorker.js","index.js"],"names":["module","exports","images","url","require","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Header","props","className","Item","value","type","src","image","alt","title","price","onClick","addToCart","Cart","cartRemove","aria-hidden","App","handleCart","setState","show","state","displayImages","imageID","handleJewelry","database","ref","on","response","jewelryArray","val","items","forEach","item","push","handlePaintings","paintingsArray","handleAll","newState","itemToAdd","priceTotal","sumTotal","cart","map","newTotal","length","reduce","accumulator","currentValue","removeFromCart","itemTobeRemoved","child","remove","newCart","data","key","id","imageRef","name","href","this","cartItem","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6IAAAA,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,+C,gJCmD5BC,EAnDA,CACX,CACIC,IAAKC,EAAQ,MAEjB,CACID,IAAKC,EAAQ,MAEjB,CACID,IAAKC,EAAQ,MAEjB,CACID,IAAKC,EAAQ,MAEjB,CACID,IAAKC,EAAQ,MAEjB,CACID,IAAKC,EAAQ,MAEjB,CACID,IAAKC,EAAQ,MAEjB,CACID,IAAKC,EAAQ,MAEjB,CACID,IAAKC,EAAQ,MAEjB,CACID,IAAKC,EAAQ,MAEjB,CACID,IAAKC,EAAQ,MAEjB,CACID,IAAKC,EAAQ,MAEjB,CACID,IAAKC,EAAQ,MAEjB,CACID,IAAKC,EAAQ,MAEjB,CACID,IAAKC,EAAQ,MAEjB,CACID,IAAKC,EAAQ,O,wBC/BrBC,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,gBACnBC,MAAO,+CAMIR,QAAf,ECJeS,EAZA,SAACC,GACZ,OACI,yBAAKC,UAAU,UAEX,yBAAKA,UAAU,WACX,oCCUDC,EAfF,SAACF,GAEV,OACE,yBAAKC,UAAU,iBAAiBE,MAAOH,EAAMI,MAC3C,6BACE,yBAAKC,IAAKL,EAAMM,MAAOC,IAAKP,EAAMQ,SAGpC,4BAAKR,EAAMQ,OACX,qCAAWR,EAAMS,OACjB,4BAAQC,QAASV,EAAMW,WAAvB,iB,kBCOOC,EAjBF,SAACZ,GACV,OACI,yBAAKC,UAAU,YACX,yBAAKI,IAAKL,EAAMM,MAAOC,IAAKP,EAAMQ,QAElC,6BACI,4BAAKR,EAAMQ,OACX,qCAAWR,EAAMS,QAGrB,4BAAQC,QAASV,EAAMa,YACnB,uBAAGZ,UAAU,cAAca,cAAY,YCoPxCC,G,gEAvPb,aAAe,IAAD,8BACZ,gBAqDFC,WAAa,WACX,EAAKC,SAAS,CACZC,MAAO,EAAKC,MAAMD,QAxDR,EA6DdE,cAAgB,SAACC,GACf,OAAOlC,EAAOkC,EAAU,GAAGjC,KA9Df,EAkEdkC,cAAgB,WACEhC,EAASiC,WAAWC,MAC5BC,GAAG,SAAS,SAACC,GAEnB,IAAMC,EAAe,GACRD,EAASE,MACHC,MACbC,SAAQ,SAACC,GACI,WAAbA,EAAK3B,MACPuB,EAAaK,KAAKD,MAItB,EAAKd,SAAS,CACZY,MAAOF,QAhFC,EAqFdM,gBAAkB,WACF3C,EAASiC,WAAWC,MAC5BC,GAAG,SAAS,SAACC,GAEjB,IAAMQ,EAAiB,GACVR,EAASE,MACHC,MACbC,SAAQ,SAACC,GACI,YAAbA,EAAK3B,MACP8B,EAAeF,KAAKD,MAIxB,EAAKd,SAAS,CACZY,MAAOK,QAnGC,EAwGdC,UAAY,WACI7C,EAASiC,WAAWC,MAC5BC,GAAG,SAAS,SAACC,GAEjB,IAAMU,EAAW,GACJV,EAASE,MACHC,MACbC,SAAQ,SAACC,GACbK,EAASJ,KAAKD,MAGhB,EAAKd,SAAS,CACZY,MAAOO,QApHC,EA2HdzB,UAAY,SAAC0B,GACG/C,EAASiC,WAAWC,IAAI,QAChCQ,KAAKK,IA7HC,EAiIdC,WAAa,WACT,IAAIC,EAAW,EAAKpB,MAAMqB,KAAKC,KAAI,SAACV,GAClC,OAAOA,EAAKtB,SAIViC,EAAW,EAEXH,EAASI,OAAS,IACpBD,EAAWH,EAASK,QALN,SAACC,EAAaC,GAAd,OAA+BD,EAAcC,MAO7D,EAAK7B,SAAS,CACZqB,WAAYI,KA7IJ,EAmJdK,eAAiB,SAACC,GACF1D,EAASiC,WAAWC,IAAI,QAChCyB,MAAMD,GAAiBE,UAnJ7B,EAAK/B,MAAQ,CACXqB,KAAM,GACNF,WAAY,EACZpB,MAAM,EACNW,MAAO,IANG,E,gEAUO,IAAD,OAEJvC,EAASiC,WAAWC,MAC5BC,GAAG,SAAS,SAACC,GAEjB,IAAMU,EAAW,GACJV,EAASE,MAEHC,MAEbC,SAAQ,SAACC,GACbK,EAASJ,KAAKD,MAGhB,EAAKd,SAAS,CACZY,MAAOO,OAKO9C,EAASiC,WAAWC,IAAI,QAChCC,GAAG,SAAS,SAACC,GAErB,IAAMyB,EAAU,GACVC,EAAO1B,EAASE,MAEtB,IAAK,IAAIyB,KAAOD,EACdD,EAAQnB,KAAK,CACXqB,IAAKA,EACLC,GAAIF,EAAKC,GAAKC,GACdC,SAAUH,EAAKC,GAAKE,SACpB9C,MAAO2C,EAAKC,GAAK5C,MACjB+C,KAAMJ,EAAKC,GAAKG,KAChBpD,KAAMgD,EAAKC,GAAKjD,OAIpB,EAAKa,SAAS,CACZuB,KAAMW,GACL,EAAKb,iB,+BAwGF,IAAD,OAEP,OACE,yBAAKrC,UAAU,OACb,6BACE,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,YACb,uBAAGwD,KAAK,mCAAR,WAKN,yBAAKxD,UAAU,WACb,4BAAQS,QAAS,kBAAM,EAAKM,cAAcf,UAAU,gBAClD,uBAAGA,UAAU,yBAGf,kBAAC,IAAD,CAAeA,UAAU,OAAOiB,KAAMwC,KAAKvC,MAAMD,MAC/C,yCACCwC,KAAKvC,MAAMqB,KAAKG,OAAS,EACxB,yBAAK1C,UAAU,iBACZyD,KAAKvC,MAAMqB,KAAKC,KAAI,SAACkB,GACpB,OACE,kBAAC,EAAD,CACEN,IAAKM,EAASN,IACd/C,MAAO,EAAKc,cAAcuC,EAASL,IACnC9C,MAAOmD,EAASH,KAChB/C,MAAOkD,EAASlD,MAChBL,KAAMuD,EAASvD,KACfS,WAAY,WACV,EAAKkC,eAAeY,EAASN,WAKrC,yBAAKpD,UAAU,cACb,sCACA,gCAAMyD,KAAKvC,MAAMmB,cAGnB,QAKV,kBAAC,EAAD,MAEA,0BAAMrC,UAAU,WACd,uCACA,wBAAIA,UAAU,eACZ,4BACE,4BAAQS,QAASgD,KAAKzB,iBAAtB,cAEF,4BACE,4BAAQvB,QAASgD,KAAKvB,WAAtB,QAEF,4BACE,4BAAQzB,QAASgD,KAAKpC,eAAtB,aAIJ,yBAAKrB,UAAU,eACZyD,KAAKvC,MAAMU,MAAMY,KAAI,SAACV,GACrB,OACE,yBAAK9B,UAAU,OAAOoD,IAAKtB,EAAKuB,IAC9B,kBAAC,EAAD,CACED,IAAKtB,EAAKsB,IACV/C,MAAO,EAAKc,cAAcW,EAAKuB,IAC/B9C,MAAOuB,EAAKyB,KACZ/C,MAAOsB,EAAKtB,MACZL,KAAM2B,EAAK3B,KACXO,UAAW,WACT,EAAKA,UAAUoB,YAS7B,gCACE,2BACE,yBAAK1B,IAAI,GAAGE,IAAI,KAnFN,OAkFZ,mBAE8B,IAC5B,uBAAGkD,KAAK,gCAAR,4B,GAhPMG,cCEEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.986aab20.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/malaGreen.f4ca7de2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/malaBlack.b35459d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/malaGold.04134435.jpg\";","module.exports = __webpack_public_path__ + \"static/media/braceletMagnesite.50b27add.jpg\";","module.exports = __webpack_public_path__ + \"static/media/braceletMixed.74d745ed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/braceletPeach.8cd14638.jpg\";","module.exports = __webpack_public_path__ + \"static/media/braceletTurquoise.2518cbc4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/earringDiamond.9d86ef06.jpg\";","module.exports = __webpack_public_path__ + \"static/media/earringFeather.8090e9cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/earringGoldLeaf.4f036287.jpg\";","module.exports = __webpack_public_path__ + \"static/media/earringPink.f85eb01e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/earringTan.5c53e178.jpg\";","module.exports = __webpack_public_path__ + \"static/media/earringWhite.41389f3a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/paintingPuffin.c055c514.jpg\";","module.exports = __webpack_public_path__ + \"static/media/paintingRedBird.74fadae3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/paintingBlueBird2.2faa11fb.jpg\";","const images = [\n    {\n        url: require(\"../assets/malaGreen.jpg\"),\n    },\n    {\n        url: require(\"../assets/malaBlack.jpg\"),\n    },\n    {\n        url: require(\"../assets/malaGold.jpg\"),\n    },\n    {\n        url: require(\"../assets/braceletMagnesite.jpg\"),\n    },\n    {\n        url: require(\"../assets/braceletMixed.jpg\"),\n    },\n    {\n        url: require(\"../assets/braceletPeach.jpg\"),\n    },\n    {\n        url: require(\"../assets/braceletTurquoise.jpg\"),\n    },\n    {\n        url: require(\"../assets/earringDiamond.jpg\"),\n    },\n    {\n        url: require(\"../assets/earringFeather.jpg\"),\n    },\n    {\n        url: require(\"../assets/earringGoldLeaf.jpg\"),\n    },\n    {\n        url: require(\"../assets/earringPink.jpg\"),\n    },\n    {\n        url: require(\"../assets/earringTan.jpg\"),\n    },\n    {\n        url: require(\"../assets/earringWhite.jpg\"),\n    },\n    {\n        url: require(\"../assets/paintingPuffin.jpg\"),\n    },\n    {\n        url: require(\"../assets/paintingRedBird.jpg\"),\n    },\n    {\n        url: require(\"../assets/paintingBlueBird2.jpg\"),\n    }\n];\n\nexport default images;\n","// firebase.js\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\n\n// Initialize Firebase\n// *** USE YOUR CONFIG OBJECT ***\nconst firebaseconfig = {\n    apiKey: \"AIzaSyC9_ifzps_1DQ-2zArCIMANCwx8JWPuJWU\",\n    authDomain: \"lucy-2b3db.firebaseapp.com\",\n    databaseURL: \"https://lucy-2b3db.firebaseio.com\",\n    projectId: \"lucy-2b3db\",\n    storageBucket: \"lucy-2b3db.appspot.com\",\n    messagingSenderId: \"1067313877074\",\n    appId: \"1:1067313877074:web:cd0841155b5fe30c584f8b\",\n};\n\nfirebase.initializeApp(firebaseconfig);\n\n// this exports the CONFIGURED version of firebase\nexport default firebase;\n","import React from 'react';\n\n\nconst Header = (props) => {\n    return (\n        <div className=\"header\">\n            \n            <div className=\"logoBox\">\n                <h1>L</h1>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default Header;","import React from 'react';\n\n\nconst Item = (props) => {\n  \n    return (\n      <div className=\"individualItem\" value={props.type}>\n        <div>\n          <img src={props.image} alt={props.title}/>\n        </div>\n        \n        <h3>{props.title}</h3>\n        <p>Price: {props.price}</p>\n        <button onClick={props.addToCart}>add to cart</button>\n      </div>\n    );\n}\n\nexport default Item;\n","import React from 'react';\n// import firebase from './firebase';\n\nconst Cart = (props) => {\n    return (\n        <div className=\"fakeItem\">\n            <img src={props.image} alt={props.title} />\n            \n            <div>\n                <h4>{props.title}</h4>\n                <p>Price: {props.price}</p>\n            </div>\n\n            <button onClick={props.cartRemove}>\n                <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n            </button>\n        </div>\n    );\n}\n\nexport default Cart;\n\n","import React, { Component } from 'react';\nimport images from './images';\nimport firebase from './firebase';\nimport Header from './Header';\nimport Item from './Item';\nimport ToggleDisplay from \"react-toggle-display\";\nimport Cart from './Cart';\nimport '../App.css';\nimport { getQueriesForElement } from '@testing-library/react';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cart: [],\n      priceTotal: 0,\n      show: false,\n      items: [],\n    };\n  }\n\n  componentDidMount() {\n    // Items population\n    const dbRef = firebase.database().ref();\n    dbRef.on(\"value\", (response) => {\n\n      const newState = [];\n      const data = response.val();\n      // gets into items array in my db\n      const items = data.items;\n\n      items.forEach((item) => {\n        newState.push(item); \n      });\n\n      this.setState({\n        items: newState,\n      });\n    });\n\n    //Cart\n    const dbRefCart = firebase.database().ref('Cart');\n    dbRefCart.on(\"value\", (response) => {\n\n      const newCart = [];\n      const data = response.val();\n\n      for (let key in data) {\n        newCart.push({\n          key: key,\n          id: data[key].id,\n          imageRef: data[key].imageRef,\n          price: data[key].price,\n          name: data[key].name,\n          type: data[key].type,\n        })\n      }\n      \n      this.setState({\n        cart: newCart,\n      }, this.priceTotal);\n    });\n  }\n\n  // function to change the state of the cartView\n  handleCart = () => {\n    this.setState({\n      show: !this.state.show,\n    });\n  };\n\n  //IMAGE DISPLAY\n  displayImages = (imageID) => {\n    return images[imageID - 1].url;\n  }\n\n  // 3 functions to show only specific items based on TYPE\n  handleJewelry = () => {\n      const dbRef = firebase.database().ref();\n      dbRef.on(\"value\", (response) => {\n      // building a jewelry array\n      const jewelryArray = [];\n      const data = response.val();\n      const items = data.items;\n      items.forEach((item) => {\n        if (item.type == \"jewelry\") {\n          jewelryArray.push(item); \n        }\n      });\n\n      this.setState({\n        items: jewelryArray,\n      });\n    });\n  }\n\n  handlePaintings = () => {\n    const dbRef = firebase.database().ref();\n    dbRef.on(\"value\", (response) => {\n      // building a paintings array\n      const paintingsArray = [];\n      const data = response.val();\n      const items = data.items;\n      items.forEach((item) => {\n        if (item.type == \"painting\") {\n          paintingsArray.push(item); \n        }\n      });\n\n      this.setState({\n        items: paintingsArray,\n      });\n    });\n  }\n\n  handleAll = () => {\n    const dbRef = firebase.database().ref();\n    dbRef.on(\"value\", (response) => {\n      // revert to original db population\n      const newState = [];\n      const data = response.val();\n      const items = data.items;\n      items.forEach((item) => {\n        newState.push(item); \n      });\n\n      this.setState({\n        items: newState,\n      });\n    });\n  }\n\n\n  // two button click handlers that dymanically alter Cart in db\n  addToCart = (itemToAdd) => {\n    const dbRef = firebase.database().ref('Cart');\n    dbRef.push(itemToAdd);\n    // this is the item object with no key\n  }\n    \n  priceTotal = () => {\n      let sumTotal = this.state.cart.map((item) => {\n        return item.price;\n      })\n      const reducer = (accumulator, currentValue) => accumulator + currentValue;\n      \n      let newTotal = 0;\n\n      if (sumTotal.length > 0) {\n        newTotal = sumTotal.reduce(reducer);\n      } \n      this.setState({\n        priceTotal: newTotal,\n      })      \n  }\n\n\n\n  removeFromCart = (itemTobeRemoved) => {\n    const dbRef = firebase.database().ref('Cart');\n    dbRef.child(itemTobeRemoved).remove();\n  }\n\n\n  render() {\n    const copyright = '\\u00A9'; \n    return (\n      <div className=\"App\">\n        <nav>\n          <div className=\"blogContainer\">\n            <div className=\"gradient\">\n              <div className=\"blogLink\">\n                <a href=\"https://friends4trees4life.com/\">Blog</a>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"cartDiv\">\n            <button onClick={() => this.handleCart()} className=\"cartShowIcon\">\n              <i className=\"fa fa-shopping-cart\"></i>\n            </button>\n\n            <ToggleDisplay className=\"cart\" show={this.state.show}>\n              <h2>Your Cart</h2>\n              {this.state.cart.length > 0 ? (\n                <div className=\"cartContainer\">\n                  {this.state.cart.map((cartItem) => {\n                    return (\n                      <Cart\n                        key={cartItem.key}\n                        image={this.displayImages(cartItem.id)}\n                        title={cartItem.name}\n                        price={cartItem.price}\n                        type={cartItem.type}\n                        cartRemove={() => {\n                          this.removeFromCart(cartItem.key);\n                        }}\n                      />\n                    );\n                  })}\n                  <div className=\"priceTotal\">\n                    <h4>Total:</h4>\n                    <h5>${this.state.priceTotal}</h5>\n                  </div>\n                </div>\n              ) : null}\n            </ToggleDisplay>\n          </div>\n        </nav>\n\n        <Header />\n\n        <main className=\"wrapper\">\n          <h2>View By</h2>\n          <ul className=\"viewOptions\">\n            <li>\n              <button onClick={this.handlePaintings}>Paintings</button>\n            </li>\n            <li>\n              <button onClick={this.handleAll}>All</button>\n            </li>\n            <li>\n              <button onClick={this.handleJewelry}>Jewelry</button>\n            </li>\n          </ul>\n\n          <div className=\"mainDisplay\">\n            {this.state.items.map((item) => {\n              return (\n                <div className=\"item\" key={item.id}>\n                  <Item\n                    key={item.key}\n                    image={this.displayImages(item.id)}\n                    title={item.name}\n                    price={item.price}\n                    type={item.type}\n                    addToCart={() => {\n                      this.addToCart(item);\n                    }}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </main>\n\n        <footer>\n          <p>\n            <img src=\"\" alt=\"\" />\n            {copyright} Juno College by{\" \"}\n            <a href=\"https://brennamacquarrie.dev\">Brenna MacQuarrie</a>\n          </p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport \"font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}